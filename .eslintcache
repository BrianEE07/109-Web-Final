[{"/Users/peterlin/109-Web-Final/src/index.js":"1","/Users/peterlin/109-Web-Final/src/App.js":"2","/Users/peterlin/109-Web-Final/src/game.js":"3","/Users/peterlin/109-Web-Final/src/setting.js":"4","/Users/peterlin/109-Web-Final/src/chicken.js":"5","/Users/peterlin/109-Web-Final/src/Config/routes.js":"6","/Users/peterlin/109-Web-Final/src/tabpanel.js":"7","/Users/peterlin/109-Web-Final/src/Components/AppRoutes.js":"8","/Users/peterlin/109-Web-Final/src/Pages/Login.js":"9","/Users/peterlin/109-Web-Final/src/Pages/PageNotFound/PageNotFound.js":"10","/Users/peterlin/109-Web-Final/src/Pages/SignUp.js":"11","/Users/peterlin/109-Web-Final/src/Context/index.js":"12","/Users/peterlin/109-Web-Final/src/Context/context.js":"13","/Users/peterlin/109-Web-Final/src/Context/actions.js":"14","/Users/peterlin/109-Web-Final/src/Context/reducer.js":"15","/Users/peterlin/109-Web-Final/src/Monitor.js":"16","/Users/peterlin/109-Web-Final/src/interaction.js":"17","/Users/peterlin/109-Web-Final/src/food.js":"18","/Users/peterlin/109-Web-Final/src/chicken/axios.js":"19","/Users/peterlin/109-Web-Final/src/gameover.js":"20","/Users/peterlin/109-Web-Final/src/choosechicken.js":"21","/Users/peterlin/109-Web-Final/src/wsClient.js":"22","/Users/peterlin/109-Web-Final/src/settingdrawer.js":"23"},{"size":1083,"mtime":1611167614476,"results":"24","hashOfConfig":"25"},{"size":704,"mtime":1611044390520,"results":"26","hashOfConfig":"25"},{"size":6096,"mtime":1611194115989,"results":"27","hashOfConfig":"25"},{"size":1983,"mtime":1611044036969,"results":"28","hashOfConfig":"25"},{"size":14833,"mtime":1611194115987,"results":"29","hashOfConfig":"25"},{"size":554,"mtime":1611044172613,"results":"30","hashOfConfig":"25"},{"size":576,"mtime":1611042426944,"results":"31","hashOfConfig":"25"},{"size":728,"mtime":1611110152820,"results":"32","hashOfConfig":"25"},{"size":6995,"mtime":1611194350647,"results":"33","hashOfConfig":"25"},{"size":240,"mtime":1611042501278,"results":"34","hashOfConfig":"25"},{"size":7848,"mtime":1611193757903,"results":"35","hashOfConfig":"25"},{"size":243,"mtime":1611042478435,"results":"36","hashOfConfig":"25"},{"size":1042,"mtime":1611042478434,"results":"37","hashOfConfig":"25"},{"size":2262,"mtime":1611115959932,"results":"38","hashOfConfig":"25"},{"size":1615,"mtime":1611042478436,"results":"39","hashOfConfig":"25"},{"size":4712,"mtime":1611200889865,"results":"40","hashOfConfig":"25"},{"size":1572,"mtime":1611167248707,"results":"41","hashOfConfig":"25"},{"size":787,"mtime":1611044036688,"results":"42","hashOfConfig":"25"},{"size":1607,"mtime":1611194115988,"results":"43","hashOfConfig":"25"},{"size":3085,"mtime":1611200884898,"results":"44","hashOfConfig":"25"},{"size":3723,"mtime":1611194115988,"results":"45","hashOfConfig":"25"},{"size":809,"mtime":1611185045921,"results":"46","hashOfConfig":"25"},{"size":3948,"mtime":1611193289615,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"y4rnbu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"50"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"/Users/peterlin/109-Web-Final/src/index.js",[],["112","113"],"/Users/peterlin/109-Web-Final/src/App.js",["114","115"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport routes from './Config/routes.js';\nimport { AuthProvider } from \"./Context\";\nimport AppRoute from './Components/AppRoutes';\n\nfunction App() {\n  return (\n      <AuthProvider>\n        <Router>\n            <Switch>\n                {routes.map((route) => (\n                <AppRoute\n                    key={route.path}\n                    path={route.path}\n                    component={route.component}\n                    isPrivate={route.isPrivate}\n                />\n                ))}\n            </Switch>\n        </Router>\n    </AuthProvider>\n  );\n}\n \nexport default App;","/Users/peterlin/109-Web-Final/src/game.js",["116","117","118","119","120","121"],"import './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabPanel from \"./tabpanel\";\nimport PropTypes from 'prop-types';\nimport Chicken from './chicken.js';\nimport Monitor from './Monitor.js';\nimport Interaction from './interaction.js';\nimport GameOver from './gameover.js';\nimport bgm from './sound/titanic.mp3';\nimport WSClient from \"./wsClient\";\n\nimport ChooseChicken from './choosechicken.js';\nimport {getUser, createChick} from './chicken/axios';\n\n\nasync function pauseMusic(){\n  const x = document.getElementById(\"player\");\n  await x.pause();\n}\nasync function playMusic(){\n  const x = document.getElementById(\"player\");\n  await x.play();\n}\n\nfunction restart(){}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nconst useStyles = makeStyles({\n  labelContainer: {\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  root: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  list_img:{\n    width: '30%',\n    height: '100%'\n  }\n})\nfunction Game() {\n\n\n  const { wsmessage, sendGameStart, sendLogOut } = WSClient()\n  const [tabValue, setTabValue] = useState(0);     //\n  const [user, setUser] = useState('這個世界的神'); //user's name\n  const [foodpos, setFoodPos] = useState([]);      //food position\n  const [hunger, setHunger] = useState(30);        //hunger of chicken\n  const [health, setHealth] = useState(100);       //health of chicken\n  const [happiness, setHappiness] = useState(90);  //happiness of chicken\n  const [lifeTime, setLifeTime] = useState(0);     //how old is the chicken?\n  const [houseHeight, setHouseHeight] = useState(0);    //the size of animation\n  const [houseWidth, setHouseWidth] = useState(0);      //the size of animation\n  const [openChooseChicken, setOpenChooseChicken] = useState(false);  //open the choosechicken menu\n  const [muted, setMuted] = useState(false);        //is the BGM muted?\n  const [stage, setStage] = useState(0);            //evolution of chicken\n  const [type, setType] = useState(0);              //type of chicken\n  const [over, setOver] = useState(false);\n  const houseRef = useRef();                        //house absolute position\n  const classes = useStyles();                      //handle some style\n  const logout = () => {\n    sendLogOut(user);\n  }\n\n  // listen incoming wsMessage\n  useEffect(() => {\n    console.log(`Incomming message: { type: ${wsmessage.type}, value: ${wsmessage.value}`)\n    switch(wsmessage.type) {\n      case 'lifetime':\n          console.log(lifeTime);\n          if(stage != 3){\n            setLifeTime(wsmessage.value);\n          }\n            break;\n      case 'stage':\n          setStage(wsmessage.value);\n          break;\n      case 'hunger':\n          setHunger(wsmessage.value);\n          break;\n      case 'health':\n          setHealth(wsmessage.value);\n          break;\n      case 'happiness':\n          setHappiness(wsmessage.value);\n          break;\n      default:\n          break;\n    }\n  }, [wsmessage])\n  // handle the BGM playing(invisible without 'controls' in <audio>)\n\n  useEffect(async() => {\n    const data = await getUser();\n    console.log('data:' , data, window.localStorage.getItem(\"account\"))\n    if(data.length === 0){\n      setUser(window.localStorage.getItem(\"account\"));\n      console.log('hewkfhewifeiwlvjil:' , data, user)\n      setHealth(100);\n      setHappiness(100);\n      setHunger(90);\n      setStage(0);\n      setOpenChooseChicken(true);\n      \n    }else {\n    console.log(\"data \", data[0])\n    \n    setOpenChooseChicken(false);\n      setUser(data[0].account);\n      setHealth(data[0].health);\n      setHappiness(data[0].happiness);\n      setHunger(data[0].hunger);\n      setType(data[0].name);\n      setStage(data[0].stage);\n      sendGameStart(user);\n    }\n  },[user])\n  const create = async() => {\n    console.log(\"typeeeee\", type)\n    console.log(\"user: \", user)\n    await createChick({account: user, name: type});\n    sendGameStart(user);\n  }\n  //handle the BGM playing(invisible without 'controls' in <audio>)\n  \n  useEffect(() => {\n    if(!muted)\n    playMusic();\n    else\n    pauseMusic();\n  },[muted])\n\n  // listen window resize event\n  useEffect(() => {\n    if(stage == 3){\n      //run game over\n    }\n  },[stage])\nconsole.log(\"type: \", type)\n  useEffect(() => {\n    const updateHW = () => {\n      setHouseHeight(houseRef.current.offsetHeight)\n      setHouseWidth(houseRef.current.offsetWidth)\n    }\n    updateHW()\n    console.log(`width ${houseWidth},  height: ${houseHeight}`);\n    window.addEventListener('resize', updateHW)\n  }, [houseWidth, houseHeight])\n\n  const onClickScreen = (e) => {\n    console.log(`relativeX: ${e.clientX - houseRef.current.offsetLeft}, relativeY: ${e.clientY - houseRef.current.offsetTop}`)\n    setFoodPos([e.clientX - houseRef.current.offsetLeft, e.clientY - houseRef.current.offsetTop])\n  }\n\n  return (\n    <div className=\"container_bg\">\n    <div className=\"container\">\n      <ChooseChicken openChooseChicken={openChooseChicken} setType={setType} type={type} create={create} user={user}/> \n  <Monitor user={user} health={health} hunger={hunger} happiness={happiness} setMuted={setMuted} muted={muted} type={type} stage={stage} lifeTime={lifeTime} logout={logout} />\n      \n      <Grid className=\"visual_block\">\n        <Grid className=\"house\" onClick={onClickScreen} ref={houseRef}>\n          <GameOver over={over} stage={stage} restart={restart} lifeTime= {lifeTime}/>\n          <Chicken height={houseHeight} width={houseWidth} foodpos={foodpos} setFoodPos={setFoodPos} health={health} user={user} hunger={hunger} happiness={happiness} setHealth={setHealth} setHunger={setHunger} setHappiness={setHappiness} setStage={setStage} stage={stage} type={type}/>\n        </Grid>\n        <Interaction classes={classes} tabValue={tabValue} setTabValue={setTabValue}/>\n      </Grid>\n      <audio id=\"player\" autoplay loop>\n          <source src={bgm} type=\"audio/mp3\"/>\n      </audio>\n    </div>\n    </div>\n  )\n}\n\nexport default Game;\n\n","/Users/peterlin/109-Web-Final/src/setting.js",["122","123","124","125","126","127"],"import './setting.css'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport chicken from \"./img/setting/icebird3.png\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nfunction Setting() {\r\n    const[chickenName, setChickenName] = useState(\"冰鳥還敢下來阿\");\r\n    return (\r\n      <Grid className=\"container_bg\">\r\n      <Grid className=\"container_set\">\r\n        <Grid className=\"set_data\">\r\n            <Grid className=\"set_property\">\r\n              <img className=\"set_user_icon\" src=\"https://www.flaticon.com/svg/static/icons/svg/64/64572.svg\"/>\r\n              <Grid className=\"set_user_word\"></Grid>\r\n              <img className=\"set_property_icon\" src=\"https://www.flaticon.com/svg/static/icons/svg/3039/3039367.svg\"/>\r\n              <ul className=\"set_property_list\">\r\n                <Grid>opopopopo</Grid>\r\n              </ul>\r\n            </Grid>\r\n            <Grid className=\"set_pet\">\r\n              <img className=\"set_pet_pic\" src={chicken}/>\r\n              <Grid className=\"set_pet_name\">{chickenName}</Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid className=\"set_button_area\">\r\n            <Link to=\"/game\">\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<ArrowBackIcon />}\r\n                className=\"set_back_button\"\r\n              >\r\n                Back\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<ExitToAppIcon />}\r\n              >\r\n                Log_out\r\n              </Button>\r\n            </Link>\r\n          </Grid>\r\n      </Grid>.\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\n  export default Setting;",["128","129"],"/Users/peterlin/109-Web-Final/src/chicken.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"import { Stage, PixiComponent, Container, Sprite, AnimatedSprite, useTick, useApp} from '@inlet/react-pixi'\nimport React, { Component, useState, useRef, useEffect} from 'react';\nimport * as PIXI from 'pixi.js';\nimport Food from './food.js'\nimport mychickenFW from './img/mychicken/mychickenFW.png'\nimport mychickenFWJson from './img/mychicken/mychickenFW.json'\nimport mychickenBW from './img/mychicken/mychickenBW.png'\nimport mychickenBWJson from './img/mychicken/mychickenBW.json'\nimport mychickenEAT from './img/mychicken/mychickenEAT.png'\nimport mychickenEATJson from './img/mychicken/mychickenEAT.json'\n\nimport icebirdFW from './img/icebird/icebirdFW.png'\nimport icebirdFWJson from './img/icebird/icebirdFW.json'\nimport icebirdBW from './img/icebird/icebirdBW.png'\nimport icebirdBWJson from './img/icebird/icebirdBW.json'\nimport icebirdEAT from './img/icebird/icebirdEAT.png'\nimport icebirdEATJson from './img/icebird/icebirdEAT.json'\n\nimport fatchickenFW from './img/fatchicken/fatchickenFW.png'\nimport fatchickenFWJson from './img/fatchicken/fatchickenFW.json'\nimport fatchickenBW from './img/fatchicken/fatchickenBW.png'\nimport fatchickenBWJson from './img/fatchicken/fatchickenBW.json'\nimport fatchickenEAT from './img/fatchicken/fatchickenEAT.png'\nimport fatchickenEATJson from './img/fatchicken/fatchickenEAT.json'\nimport mychicken_bigFW from './img/mychicken_big/mychicken_bigFW.png'\nimport mychicken_bigFWJson from './img/mychicken_big/mychicken_bigFW.json'\nimport mychicken_bigBW from './img/mychicken_big/mychicken_bigBW.png'\nimport mychicken_bigBWJson from './img/mychicken_big/mychicken_bigBW.json'\nimport mychicken_bigEAT from './img/mychicken_big/mychicken_bigEAT.png'\nimport mychicken_bigEATJson from './img/mychicken_big/mychicken_bigEAT.json'\nimport icebird_bigFW from './img/icebird_big/icebird_bigFW.png'\nimport icebird_bigFWJson from './img/icebird_big/icebird_bigFW.json'\nimport icebird_bigBW from './img/icebird_big/icebird_bigBW.png'\nimport icebird_bigBWJson from './img/icebird_big/icebird_bigBW.json'\nimport icebird_bigEAT from './img/icebird_big/icebird_bigEAT.png'\nimport icebird_bigEATJson from './img/icebird_big/icebird_bigEAT.json'\nimport fatchicken_bigFW from './img/fatchicken_big/fatchicken_bigFW.png'\nimport fatchicken_bigFWJson from './img/fatchicken_big/fatchicken_bigFW.json'\nimport fatchicken_bigBW from './img/fatchicken_big/fatchicken_bigBW.png'\nimport fatchicken_bigBWJson from './img/fatchicken_big/fatchicken_bigBW.json'\nimport fatchicken_bigEAT from './img/fatchicken_big/fatchicken_bigEAT.png'\nimport fatchicken_bigEATJson from './img/fatchicken_big/fatchicken_bigEAT.json'\nimport littlebirdFW from './img/littlebird/littlebirdFW.png'\nimport littlebirdFWJson from './img/littlebird/littlebirdFW.json'\nimport littlebirdBW from './img/littlebird/littlebirdBW.png'\nimport littlebirdBWJson from './img/littlebird/littlebirdBW.json'\nimport littlebirdEAT from './img/littlebird/littlebirdEAT.png'\nimport littlebirdEATJson from './img/littlebird/littlebirdEAT.json'\nimport {eat} from './chicken/axios';\n\n// type 0 1 2 represent middlechicken type 3 4 5 represent largechicken  6 represent smallchicken\nconst chickenFWList = [mychickenFW, icebirdFW, fatchickenFW, mychicken_bigFW, icebird_bigFW, fatchicken_bigFW, littlebirdFW]\nconst chickenFWJsonList = [mychickenFWJson, icebirdFWJson, fatchickenFWJson, mychicken_bigFWJson, icebird_bigFWJson, fatchicken_bigFWJson, littlebirdFWJson]\nconst chickenBWList = [mychickenBW, icebirdBW, fatchickenBW, mychicken_bigBW, icebird_bigBW, fatchicken_bigBW, littlebirdBW]\nconst chickenBWJsonList = [mychickenBWJson, icebirdBWJson, fatchickenBWJson, mychicken_bigBWJson, icebird_bigBWJson, fatchicken_bigBWJson, littlebirdBWJson]\nconst chickenEATList = [mychickenEAT, icebirdEAT, fatchickenEAT, mychicken_bigEAT, icebird_bigEAT, fatchicken_bigEAT, littlebirdEAT]\nconst chickenEATJsonList = [mychickenEATJson, icebirdEATJson, fatchickenEATJson, mychicken_bigEATJson, icebird_bigEATJson, fatchicken_bigEATJson, littlebirdEATJson]\n\n\n\nconst ChickenFW = (props) => {\n  const [frames, setFrames] = useState([])\n  const willMount = useRef(true);\n\n  const loadSpritesheet = () => {\n    if(props.stage == 0){\n      console.log(\"this is \", props.stage)\n      const baseTexture = PIXI.BaseTexture.from(chickenFWList[6]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenFWJsonList[6]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n    else if(props.stage == 1){\n      console.log(\"this issssssss \", props.stage)\n      const baseTexture = PIXI.BaseTexture.from(chickenFWList[props.type]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenFWJsonList[props.type]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n    else if (props.stage == 2){\n      const baseTexture = PIXI.BaseTexture.from(chickenFWList[props.type + 3]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenFWJsonList[props.type + 3]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n  }\n\n  if (willMount.current) {\n      loadSpritesheet();\n      willMount.current = false;\n  }\n\n  useTick(delta => {\n    props.setPositionX(props.positionX + 1)\n\n    if (props.positionX > props.width / 2 - props.chickensize) {\n      props.setState('backward')\n    }  \n    if(props.foodposarr.length) {\n        let x = Math.round((props.foodposarr[0][0] - props.chickensize) / 2);\n        if (x < 0) \n            x = 0;\n        else if (x >= Math.round((props.width) / 2 - props.chickensize))\n            x = Math.round((props.width) / 2 - props.chickensize);\n\n        if (props.positionX === x) {\n            props.setState('eating')\n        }\n        else if (props.positionX > x) {\n            props.setState('backward')\n        }\n    }\n  })\n\n  if (frames.length === 0) {\n    return null;\n  }\n  \n  return(\n    <AnimatedSprite\n        animationSpeed={0.1}\n        isPlaying={true}\n        textures={frames}\n        height={props.chickensize}\n        width={props.chickensize}\n        x={props.positionX} \n        y={props.positionY}\n    />\n  )\n}\n\n\nconst ChickenBW = (props) => {\n  const [frames, setFrames] = useState([])\n  const willMount = useRef(true);\n\n  const loadSpritesheet = () => {\n    if(props.stage == 0){\n      const baseTexture = PIXI.BaseTexture.from(chickenBWList[6]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenBWJsonList[6]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n    else if(props.stage == 1){\n      const baseTexture = PIXI.BaseTexture.from(chickenBWList[props.type]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenBWJsonList[props.type]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n    else if (props.stage == 2){\n      const baseTexture = PIXI.BaseTexture.from(chickenBWList[props.type + 3]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenBWJsonList[props.type + 3]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n  }\n\n  if (willMount.current) {\n      loadSpritesheet();\n      willMount.current = false;\n  }\n\n  useTick(delta => {\n    props.setPositionX(props.positionX - 1)\n\n    if (props.positionX <= 0) {\n      props.setState('forward')\n    }\n    if(props.foodposarr.length) {\n        let x = Math.round((props.foodposarr[0][0] - props.chickensize) / 2);\n        if (x < 0) \n            x = 0;\n        else if (x >= Math.round((props.width) / 2 - props.chickensize)) {\n            x = Math.round((props.width) / 2 - props.chickensize);\n        }\n\n        if (props.positionX === x) {\n            props.setState('eating')\n        }\n        else if (props.positionX < x) {\n            props.setState('forward')\n        }\n    }\n    \n  })\n\n  if (frames.length === 0) {\n    return null;\n  }\n  \n\n  return(\n    <AnimatedSprite\n        animationSpeed={0.1}\n        isPlaying={true}\n        textures={frames}\n        height={props.chickensize}\n        width={props.chickensize}\n        x={props.positionX} \n        y={props.positionY}\n    />\n  )\n}\n\nconst ChickenEAT = (props) => {\n  const [frames, setFrames] = useState([])\n  const [data, setData] = useState([])\n  const willMount = useRef(true);\n  // const handlestatus = async() => {\n  //   const checkFull = await eat({username: props.user, hunger: props.hunger,health: props.health, message: 'return'});\n\n  // }\n  let counter = 0\n  const loadSpritesheet = () => {\n    if(props.stage == 0){\n      const baseTexture = PIXI.BaseTexture.from(chickenEATList[6]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenEATJsonList[6]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n    else if(props.stage == 1){\n      const baseTexture = PIXI.BaseTexture.from(chickenEATList[props.type]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenEATJsonList[props.type]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n    else if (props.stage == 2){\n      const baseTexture = PIXI.BaseTexture.from(chickenEATList[props.type + 3]);\n      const spritesheet = new PIXI.Spritesheet(baseTexture, chickenEATJsonList[props.type + 3]);\n      spritesheet.parse(() => {\n          setFrames( Object.keys(spritesheet.textures).map((frame) => spritesheet.textures[frame]));\n      });\n    }\n  }\n\n  useEffect(async ()=> {\n    const checkFull = await eat({account: props.user, hunger: props.hunger,health: props.health, message: 'return'});\n    setData(checkFull);\n    console.log(\"ferjgiehjfi\", checkFull[0])\n  },[])\n  if (willMount.current) {\n      loadSpritesheet();\n      willMount.current = false;\n      \n  }\n\n  useTick(  (delta) => {\n      counter += delta;\n      \n       \n      if (counter >= 50) {\n\n            const newfoodarr = [...props.foodarr]\n            const newfoodposarr = [...props.foodposarr]\n            newfoodarr.shift() // remove first element\n            newfoodposarr.shift()\n            props.setFoodArr(newfoodarr)\n            props.setFoodPosArr(newfoodposarr)\n            props.setHunger(data[0].hunger)\n            props.setHealth(data[0].health)\n            props.setStage(data[0].stage)\n           \n            props.setState('forward')\n            // axios.get('/eating').then((res) => setHunger(res.data))\n      }\n  })\n  \n  if (frames.length === 0) {\n      return null;\n    }\n\n  return(\n    <AnimatedSprite\n        animationSpeed={0.05}\n        isPlaying={true}\n        textures={frames}\n        height={props.chickensize}\n        width={props.chickensize}\n        x={props.positionX} \n        y={props.positionY}\n    />\n  )\n}\n\nconst Chicken = (props) => {\n  const [positionX, setPositionX] = useState(0)\n  const [positionY, setPositionY] = useState(0)\n  const [foodarr, setFoodArr] = useState([])\n  const [foodposarr, setFoodPosArr] = useState([])\n  const [foodId, setFoodId] = useState(0)\n  const [state, setState] = useState('forward')\n\n  useEffect(() => {\n    if(props.stage == 3){\n      setState('dead')\n    }\n  },[props.stage])\n\n  useEffect(() => {\n      setPositionY(Math.round(props.height / 3.6))\n  }, [props.height])\n\n  useEffect(() => {\n    if (props.foodpos[1] < 2 * Math.round(props.height / 3.6) + 2 * Math.sqrt(props.height * props.width) / 10) {\n        setFoodArr([...foodarr, genNewFood()])\n        setFoodPosArr([...foodposarr, [props.foodpos[0], props.foodpos[1]]])\n    }\n  }, [props.foodpos])\n\n  const genNewFood = () => {\n    console.log(`gen ${foodarr.length} food x=${props.foodpos[0]}, y=${props.foodpos[1]}`)\n    const conf = {\n        foodId: foodId,\n        x: props.foodpos[0],\n        y: props.foodpos[1],\n        foodsize: Math.sqrt(props.height * props.width) / 80,\n        floorpos: positionY + Math.sqrt(props.height * props.width) / 10\n    }\n    setFoodId(foodId + 1);\n    return conf;\n  }\n\n  const chooseState = () => {\n    switch(state) {\n        case 'forward':\n            return(\n            <ChickenFW \n                positionX={positionX} \n                positionY={positionY} \n                height={props.height}\n                width={props.width}\n                chickensize={Math.sqrt(props.height * props.width) / 10}\n                foodposarr={foodposarr}\n                setPositionX={setPositionX} \n                setState={setState}\n                type ={props.type}\n                stage={props.stage}\n            />\n            );\n        case 'backward':\n            return(\n            <ChickenBW \n                positionX={positionX} \n                positionY={positionY} \n                height={props.height}\n                width={props.width}\n                chickensize={Math.sqrt(props.height * props.width) / 10}\n                foodposarr={foodposarr}\n                setPositionX={setPositionX} \n                setState={setState}\n                type={props.type}\n                stage={props.stage}\n            />\n            );\n        case 'eating':\n            return(\n            <ChickenEAT \n                positionX={positionX} \n                positionY={positionY} \n                chickensize={Math.sqrt(props.height * props.width) / 10}\n                foodarr={foodarr}\n                foodposarr={foodposarr}\n                hunger={props.hunger}\n                setFoodArr={setFoodArr}\n                setFoodPosArr={setFoodPosArr}\n                setHunger={props.setHunger}\n                setState={setState}\n                health={props.health} \n                hunger={props.hunger} \n                happiness={props.happiness} \n                setHealth={props.setHealth} \n                setHunger={props.setHunger} \n                setHappiness={props.setHappiness}\n                type={props.type}\n                stage={props.stage}\n                user={props.user}\n                setStage={props.setStage}\n            />\n            );\n            case 'dead':\n              return(\n                <></>\n              )\n    }\n  }\n\n  return (\n  <Stage height={props.height / 2} width={props.width / 2} options={{transparent: true}}>\n    <Container position={[0, 0]}>\n    {chooseState()}\n    {foodarr.map(ele => (\n        <Food\n            key={ele.foodId}\n            {...ele}\n        />\n    ))}\n    </Container>\n  </Stage>)\n};\n\nexport default Chicken;\n\n\n","/Users/peterlin/109-Web-Final/src/Config/routes.js",["150"],"import React from \"react\";\nimport Login from '../Pages/Login'\nimport SignUp from '../Pages/SignUp'\nimport NotFound from '../Pages/PageNotFound/PageNotFound'\nimport Game from '../game'\n\n\nconst routes =[\n    {\n      path:'/login',\n      component: Login,\n      isPrivate: false\n    },\n    {\n      path:'/signup',\n      component: SignUp,\n      isPrivate: false\n    },\n    {\n      path:'/game',\n      component: Game,\n      isPrivate: true\n    },\n    {\n      path:'/*',\n      component: NotFound,\n      isPrivate: true\n    }\n  ]\n   \n  export default routes\n","/Users/peterlin/109-Web-Final/src/tabpanel.js",["151","152","153"],"import React, { useEffect, useRef, useState } from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nexport default TabPanel","/Users/peterlin/109-Web-Final/src/Components/AppRoutes.js",[],"/Users/peterlin/109-Web-Final/src/Pages/Login.js",["154","155","156"],"import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Chicken from '../img/login//chicken.png';\nimport { useHistory } from \"react-router-dom\";\nimport { checkUser, useAuthState, useAuthDispatch } from '../Context' \nimport {createChick} from  '../chicken/axios.js'\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Web Final\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login() {\n  const classes = useStyles();\n  // \n  // const rememberedAccount = localStorage.getItem(\"checked\") === true ? localStorage.account : \"\"\n  // console.log(localStorage.getItem(\"checked\"))\n  // console.log(rememberedAccount)\n  const [account, setAccount] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState({target: \"\", type: \"\"});\n  const [isLogin, setIsLogin] = useState(false);\n  const [checked, setChecked] = useState(false);\n  let history = useHistory();\n\n  const handleAccountChange = (e) => {\n    setAccount(e.target.value);\n  }\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  }\n  const handleCheck = () => {\n    setChecked(!checked);\n    console.log(checked)\n    // localStorage.setItem(\"checked\", checked)\n  }\n  const handleError = () => {\n    if (account === \"\") {\n      setError({target: \"account\", type: \"Required text.\"});\n    }\n    else if (password === \"\") {\n      setError({target: \"password\", type: \"Required text.\"});\n    }\n    else return false;\n    return true;\n  }\n\n  const handleMsgError = (msg) => {\n    if (msg === \"Account incorrect.\") {\n      setError({target: \"account\", type: \"Can't find account. If you don't have one, please sign up!!\"});\n      // setAccount(\"\");\n    }\n    else if (msg === \"Password incorrect.\") {\n      setError({target: \"password\", type: \"Password incorrect.\"});\n      // setPassword(\"\");\n    }\n    else return false;\n    return true;\n  }\n\n  const redirect = () => {\n    history.push(\"/game\");\n  }\n  const dispatch = useAuthDispatch() //get the dispatch method from the useDispatch custom hook\n  \n  const onSubmit = async (e) => {\n    e.preventDefault()\n    if (handleError()) return;\n    let payload = {account, password}\n    let msg = await checkUser(dispatch, payload);\n    try {\n      if (handleMsgError(msg)) return;\n      else {\n        setError({target: \"\", type: \"\"});\n      }\n      if (msg === \"Login Successfully!!\"){\n        console.log('hewertyutrewertytrewrtyu')\n          // const chicken = await createChick(\"fat\", 'firstTime')\n          console.log(\"this is \", account)\n          localStorage.setItem(\"account\", account)\n          // await createChick({account: account, name: 4})\n          // console.log(chicken)\n          setIsLogin(true);\n          console.log(\"Login SSSSSUUUUUCCCCCCEEEEESSSSS!!!!!\");\n          redirect();\n      }\n    }catch (error) {\n      console.log(error)\n    }\n  }\n  \n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar} src={Chicken} alt=\"chicken\">\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          {(error.target === 'account')\n          ?<TextField\n            error\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"outlined-error-helper-text\"\n            label=\"Account\"\n            name=\"account\"\n            autoComplete=\"account\"\n            autoFocus\n            helperText={error.type}\n            value={account}\n            onChange={handleAccountChange}\n          />\n          :<TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            // required\n            fullWidth\n            id=\"account\"\n            label=\"Account\"\n            name=\"account\"\n            autoComplete=\"account\"\n            autoFocus\n            value={account}\n            onChange={handleAccountChange}\n          />}\n          {(error.target === 'password')\n          ?<TextField\n            error\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"outlined-error-helper-text\"\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"current-password\"\n            helperText={error.type}\n            value={password}\n            onChange={handlePasswordChange}\n          />\n          :<TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            // required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />}\n          <FormControlLabel\n            control={<Checkbox checked={checked} onChange={handleCheck} value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            // type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Login\n","/Users/peterlin/109-Web-Final/src/Pages/PageNotFound/PageNotFound.js",[],"/Users/peterlin/109-Web-Final/src/Pages/SignUp.js",["157","158","159","160","161","162","163"],"import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Chicken from '../img/login/chicken2.png';\n// import { signUp } from './axios';\nimport { useHistory } from \"react-router-dom\";\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { signUp, useAuthState, useAuthDispatch } from '../Context' \n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Web Final\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp(props) {\n  const classes = useStyles();\n  const [account, setAccount] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState({target: \"\", type: \"\"});\n  const [signupSuccess, setSignUpSuccess] = useState(false);\n  let history = useHistory();\n\n\n  const handleAccountChange = (e) => {\n    setAccount(e.target.value);\n  }\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  }\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  }\n\n  const handleError = () => {\n    if (email === \"\") {\n      setError({target: \"email\", type: \"Required text.\"});\n    }\n    else if (account === \"\") {\n      setError({target: \"account\", type: \"Required text.\"});\n    }\n    else if (password === \"\") {\n      setError({target: \"password\", type: \"Required text.\"});\n    }\n    else return false;\n    return true;\n  }\n\n  const handleMsgError = (msg) => {\n    if (msg === \"Email duplicate.\") {\n      setError({target: \"email\", type: `Email \\\"${email}\\\" already exists!! Please enter another one.`});\n    //   setEmail(\"\");\n    }\n    else if (msg === \"Account duplicate.\") {\n      setError({target: \"account\", type: `Account \\\"${account}\\\" already exists!! Please choose another one.`});\n    //   setAccount(\"\");\n    }\n    else return false;\n    return true;\n  }\n\n  const redirect = () => {\n    history.push(\"/game\");\n  }\n  const dispatch = useAuthDispatch()\n  const { loading, errorMessage } = useAuthState() //read the values of loading and errorMessage from context\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    if (handleError()) return;\n    let chicken = []\n    let payload = {email, account, password, chicken}\n    window.localStorage.setItem(\"account\", account)\n    try {\n        let msg = await signUp(dispatch, payload) //loginUser action makes the request and handles all the neccessary state changes\n        if (handleMsgError(msg)) return;\n        else {\n              setError({target: \"\", type: \"\"});\n            }\n        if (msg === \"Signup Successfully!!\"){\n            setSignUpSuccess(true);\n            console.log(\"Signup SSSSSUUUUUCCCCCCEEEEESSSSS!!!!!\")\n            redirect();\n            }\n    } catch (error) {\n        console.log(error)\n    }\n}\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        {(signupSuccess)\n        ?<Alert severity=\"success\">This is a success alert — check it out!</Alert>:<div/>}\n        <Avatar className={classes.avatar} src={Chicken} alt=\"chicken\">\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n            {(error.target === 'email')\n            ?<TextField\n                error\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"outlined-error-helper-text\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                helperText={error.type}\n                value={email}\n                onChange={handleEmailChange}\n            />\n            :<TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={email}\n                onChange={handleEmailChange}\n            />}\n            </Grid>\n            <Grid item xs={12}>\n            {(error.target === 'account')\n            ?<TextField\n                error\n                variant=\"outlined\"\n                fullWidth\n                required\n                id=\"outlined-error-helper-text\"\n                label=\"Account\"\n                name=\"account\"\n                autoComplete=\"account\"\n                helperText={error.type}\n                value={account}\n                onChange={handleAccountChange}\n            />\n            :<TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"account\"\n                label=\"Account\"\n                name=\"account\"\n                autoComplete=\"account\"\n                value={account}\n                onChange={handleAccountChange}\n            />}\n            </Grid>\n            <Grid item xs={12}>\n            {(error.target === 'password')\n            ?<TextField\n                error\n                variant=\"outlined\"\n                fullWidth\n                required\n                id=\"outlined-error-helper-text\"\n                label=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                autoComplete=\"current-password\"\n                helperText={error.type}\n                value={password}\n                onChange={handlePasswordChange}\n            />\n            :<TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={handlePasswordChange}\n            />}\n            </Grid>\n          </Grid>\n          <Button\n            // type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\nexport default SignUp","/Users/peterlin/109-Web-Final/src/Context/index.js",[],"/Users/peterlin/109-Web-Final/src/Context/context.js",[],"/Users/peterlin/109-Web-Final/src/Context/actions.js",[],"/Users/peterlin/109-Web-Final/src/Context/reducer.js",["164","165"],"import React, { useReducer } from \"react\";\n \n// let user = localStorage.getItem(\"currentUser\")\n//   ? JSON.parse(localStorage.getItem(\"currentUser\")).user\n//   : \"\";\n// let token = localStorage.getItem(\"currentUser\")\n//   ? JSON.parse(localStorage.getItem(\"currentUser\")).auth_token\n//   : \"\";\n \nexport const initialState = {\n//   userDetails: \"\" || user,\n//   token: \"\" || token,\n  success: false,\n  loading: false,\n  errorMessage: null\n};\n \nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_LOGIN\":\n      return {\n        ...initialState,\n        loading: true\n      };\n      case \"REQUEST_SIGNUP\":\n        return {\n          ...initialState,\n          loading: true\n        };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...initialState,\n        // user: action.payload.user,\n        // token: action.payload.auth_token,\n        success:true,\n        loading: false\n      };\n      case \"SIGNUP_SUCCESS\":\n        return {\n          ...initialState,\n          success:true,\n          // user: action.payload.user,\n          // token: action.payload.auth_token,\n          loading: false\n        };\n    case \"LOGOUT\":\n      return {\n        ...initialState,\n        // user: \"\",\n        // token: \"\"\n      };\n \n    case \"LOGIN_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error\n      };\n      case \"SIGNUP_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error\n      };\n \n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};","/Users/peterlin/109-Web-Final/src/Monitor.js",["166","167","168","169","170","171","172","173"],"import './App.css'\nimport React, { useEffect, useRef, useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport RestaurantMenuIcon from '@material-ui/icons/RestaurantMenu';\nimport SettingDrawer from './settingdrawer';\nimport logo from \"./img/monitor/logo.png\";\nimport redbar_0 from \"./img/status_bar/bar_0.png\";\nimport redbar_10 from \"./img/status_bar/redbar_10.png\";\nimport redbar_20 from \"./img/status_bar/redbar_20.png\";\nimport redbar_30 from \"./img/status_bar/redbar_30.png\";\nimport redbar_40 from \"./img/status_bar/redbar_40.png\";\nimport redbar_50 from \"./img/status_bar/redbar_50.png\";\nimport redbar_60 from \"./img/status_bar/redbar_60.png\";\nimport redbar_70 from \"./img/status_bar/redbar_70.png\";\nimport redbar_80 from \"./img/status_bar/redbar_80.png\";\nimport redbar_90 from \"./img/status_bar/redbar_90.png\";\nimport redbar_100 from \"./img/status_bar/redbar_100.png\";\nimport bluebar_0 from \"./img/status_bar/bar_0.png\";\nimport bluebar_10 from \"./img/status_bar/bluebar_10.png\";\nimport bluebar_20 from \"./img/status_bar/bluebar_20.png\";\nimport bluebar_30 from \"./img/status_bar/bluebar_30.png\";\nimport bluebar_40 from \"./img/status_bar/bluebar_40.png\";\nimport bluebar_50 from \"./img/status_bar/bluebar_50.png\";\nimport bluebar_60 from \"./img/status_bar/bluebar_60.png\";\nimport bluebar_70 from \"./img/status_bar/bluebar_70.png\";\nimport bluebar_80 from \"./img/status_bar/bluebar_80.png\";\nimport bluebar_90 from \"./img/status_bar/bluebar_90.png\";\nimport bluebar_100 from \"./img/status_bar/bluebar_100.png\";\nimport purplebar from \"./img/status_bar/purplebar.png\";\nimport greenbar_0 from \"./img/status_bar/bar_0.png\";\nimport greenbar_10 from \"./img/status_bar/greenbar_10.png\";\nimport greenbar_20 from \"./img/status_bar/greenbar_20.png\";\nimport greenbar_30 from \"./img/status_bar/greenbar_30.png\";\nimport greenbar_40 from \"./img/status_bar/greenbar_40.png\";\nimport greenbar_50 from \"./img/status_bar/greenbar_50.png\";\nimport greenbar_60 from \"./img/status_bar/greenbar_60.png\";\nimport greenbar_70 from \"./img/status_bar/greenbar_70.png\";\nimport greenbar_80 from \"./img/status_bar/greenbar_80.png\";\nimport greenbar_90 from \"./img/status_bar/greenbar_90.png\";\nimport greenbar_100 from \"./img/status_bar/greenbar_100.png\";\nconst red = [redbar_0,redbar_10,redbar_20,redbar_30,redbar_40,redbar_50,redbar_60,redbar_70,redbar_80,redbar_90,redbar_100]\nconst blue = [bluebar_0,bluebar_10,bluebar_20,bluebar_30,bluebar_40,bluebar_50,bluebar_60,bluebar_70,bluebar_80,bluebar_90,bluebar_100,purplebar]\nconst green = [greenbar_0,greenbar_10,greenbar_20,greenbar_30,greenbar_40,greenbar_50,greenbar_60,greenbar_70,greenbar_80,greenbar_90,greenbar_100]\n\nconst Monitor = (props) => {\n    const setMuted = props.setMuted;\n    const muted = props.muted;\n    function handleHungerStatus(hunger){\n        if(hunger > 100){\n            return(110);\n        }\n        else{\n            return(hunger);\n        }\n    } \n    return(\n        <Grid className=\"moniter\">\n            <img className=\"moni_logo\" src={logo}/>\n\n            <div className=\"moni_user\">{props.user}, welcome!<br/> \n                your GG is now<br/>\n                {props.lifeTime}s old\n            </div>\n            <Grid className=\"moni_status\">\n                <FavoriteIcon className=\"moni_status_icon\"/>\n            <Grid className=\"moni_status_icon\">{props.health}%</Grid>\n                <img className=\"moni_status_bar\" src={red[props.health/10]}/>\n            </Grid>\n            <Grid className=\"moni_status\">\n                <InsertEmoticonIcon className=\"moni_status_icon\"/>\n            <Grid className=\"moni_status_icon\">{props.happiness}%</Grid>\n                <img className=\"moni_status_bar\" src={green[props.happiness/10]} />\n            </Grid>\n            <Grid className=\"moni_status\">\n                <RestaurantMenuIcon className=\"moni_status_icon\"/>\n                <Grid className=\"moni_status_icon\">{handleHungerStatus(props.hunger)}%</Grid>\n                <img className=\"moni_status_bar\" src={blue[handleHungerStatus(props.hunger)/10]}/>\n            </Grid>\n            <Grid className=\"moni_mute\">\n                <img className=\"moni_mute_icon\" src=\"https://www.flaticon.com/svg/static/icons/svg/727/727240.svg\"/>\n                <input className=\"moni_mute_button\" type=\"checkbox\" onClick={() => setMuted(!muted)}/>\n          </Grid>\n            <SettingDrawer health={props.health} happiness={props.happiness} hunger={props.hunger} user={props.user} stage={props.stage} type={props.type} lifeTime={props.lifeTime} logout={props.logout} />\n        </Grid>\n    )\n}\n\nexport default Monitor;","/Users/peterlin/109-Web-Final/src/interaction.js",["174"],"import './App.css';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport ahhmeow from \"./img/interaction/ahhmeow.jpg\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nconst Interaction = (props) => {\n    const classes = props.classes;\n    return(\n        <Grid className=\"interaction\">\n          <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n            <ListItem button>\n              <ListItemIcon>\n                <LocalHospitalIcon/>\n              </ListItemIcon>\n              <ListItemText primary=\"Super good food\" />\n            </ListItem>\n            <Divider />\n            <ListItem button divider>\n              <img src = {ahhmeow} className={classes.list_img}/>\n              <ListItemText primary=\"My cat can spin backward\" />\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <FavoriteIcon/>\n              </ListItemIcon>\n              <ListItemText primary=\"Play with the chick\" />\n            </ListItem>\n            <Divider light />\n            <ListItem button>\n              <ListItemText primary=\"Nothing here\" />\n            </ListItem>\n          </List>\n        </Grid>\n    )\n} \nexport default Interaction;","/Users/peterlin/109-Web-Final/src/food.js",["175","176","177","178","179","180","181","182","183","184"],"import { Stage, PixiComponent, Container, Sprite, AnimatedSprite, useTick, useApp} from '@inlet/react-pixi'\nimport React, { Component, useState, useRef, useEffect} from 'react';\nimport * as PIXI from 'pixi.js';\nimport food from './img/food/food1.png'\n\nconst Food = (props) => {\n    const [positionX, setPositionX] = useState((props.x - props.foodsize) / 2)\n    const [positionY, setPositionY] = useState((props.y - props.foodsize) / 2)\n\n    useTick(delta => {\n        if (positionY < props.floorpos){\n            setPositionY(positionY + 8 * delta)\n        }\n    })\n\n    return (\n        <Sprite \n            image={food} \n            x={positionX} \n            y={positionY}\n            height={props.foodsize} \n            width={props.foodsize}\n        />\n    )\n}\n\nexport default Food","/Users/peterlin/109-Web-Final/src/chicken/axios.js",[],"/Users/peterlin/109-Web-Final/src/gameover.js",["185","186","187","188","189"],"import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport deadchicken from './img/deadchicken/deadchicken.png';\nconst styles = (theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(5),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\n  const DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <Typography variant=\"h6\">{children}</Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  });\n  \n  const DialogContent = withStyles((theme) => ({\n    root: {\n      padding: theme.spacing(1),\n    },\n  }))(MuiDialogContent);\n  \n  const DialogActions = withStyles((theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(5),\n    },\n  }))(MuiDialogActions);\n\nconst GameOver = (props) => {\n    const [open, setOpen] = React.useState(props.over);\n        useEffect(() => {\n            if(props.stage == 3)\n            setOpen(true)\n        },[props.stage])\n    const handleClose = () => {\n      setOpen(open);\n    };\n  \n    return (\n      <div>\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            真的GG啦\n          </DialogTitle>\n          <DialogContent dividers>\n            <Typography gutterBottom>\n                <img src={deadchicken} width=\"30%\" height=\"30%\"/><br/>\n                Game Over!!<br/>\n                You bird has lived for {props.lifeTime}s.\n            </Typography>\n            <Typography gutterBottom>\n              \"可憐哪\"\n            </Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={() => { setOpen(false);props.setOpenChooseChicken(true);}} color=\"secondary\"><br/>\n              Select a new chicken!\n            </Button>\n          </DialogActions>\n          <DialogActions>\n            <Link to='/login'>\n              <Button autoFocus color=\"primary\">\n                Restart!\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  export default GameOver;","/Users/peterlin/109-Web-Final/src/choosechicken.js",["190","191","192"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nconst styles = (theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(5),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\n  const DialogTitle = withStyles(styles)((props) => {\n   \n    const { children, classes, onClose, ...other } = props;\n\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <Typography variant=\"h6\">{children}</Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  });\n  \n  const DialogContent = withStyles((theme) => ({\n    root: {\n      padding: theme.spacing(1),\n    },\n  }))(MuiDialogContent);\n  \n  const DialogActions = withStyles((theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(5),\n    },\n  }))(MuiDialogActions);\n  \nconst ChooseChicken = (props) => {\n    const [open, setOpen] = React.useState(props.openChooseChicken);\n    // const setType = props.setType;\n    console.log(\"props.typel: \", props)\n    console.log(\"open: \", open)\n    useEffect(() => {\n      setOpen(props.openChooseChicken)\n    }, [props.openChooseChicken])\n    const handleClose = () => {\n        props.create();\n        setOpen(false);\n    };\n    // const setType = (num) => {\n    //   console.log(num)\n    //   props.setType(num)\n    // }\n    function handleChicken(choice){\n      console.log(\"choice\", choice)\n        if(choice == 0){\n            return('黃色的看甚麼看')\n        }\n        else if(choice == 1){\n            return('藍色的還敢下來阿')\n        }\n        else if(choice == 2){\n            return('白色的俺在飛呀')\n        }\n    }\n\n    return (\n        <div>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Your choice is {handleChicken(props.type)}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography gutterBottom>\n                        看甚麼看\n                    </Typography>\n                    <Button onClick={() => {props.setType(0);console.log(\"this is o\",props.type)}}> 我偏要看</Button><br/>\n                    <Typography gutterBottom>\n                        還敢下來阿\n                    </Typography>\n                    <Button onClick={() => props.setType(1)}>我就要下來</Button><br/>\n                    <Typography gutterBottom>\n                        我在飛呀\n                    </Typography>\n                    <Button onClick={() => props.setType(2)}>飛你個頭</Button><br/>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={props.create} color=\"primary\">\n                        Save changes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n  }\n  export default ChooseChicken;\n","/Users/peterlin/109-Web-Final/src/wsClient.js",["193","194","195"],"import './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst client = new WebSocket('ws://localhost:4001')\n\nconst WSClient = () => {\n    const [wsmessage, setWSMessage] = useState({})\n\n    // receive Stage or Hun/Hp message\n    client.onmessage = (mes) => {\n        const { data } = mes;\n        const { type, value } = JSON.parse(data);\n        setWSMessage({type, value});\n    }\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    }\n    \n    const sendGameStart = (account) => {\n        sendData({message: \"Login\", account: account});\n    }\n\n    const sendLogOut = (account) => {\n        sendData({message: \"Logout\", account: account});\n    }\n\n    return {\n        wsmessage,\n        sendGameStart,\n        sendLogOut\n    }\n}\n\n\nexport default WSClient;","/Users/peterlin/109-Web-Final/src/settingdrawer.js",["196","197"],"import React from 'react';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport LiveHelpOutlinedIcon from '@material-ui/icons/LiveHelpOutlined';\nimport yellowbird_1 from './img/mychicken/mychicken1.png';\nimport icebird_1 from './img/icebird/icebird1.png';\nimport {Link} from 'react-router-dom';\nconst styles = (theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(5),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\n  const DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <Typography variant=\"h6\">{children}</Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  });\n  \n  const DialogContent = withStyles((theme) => ({\n    root: {\n      padding: theme.spacing(1),\n    },\n  }))(MuiDialogContent);\n  \n  const DialogActions = withStyles((theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(5),\n    },\n  }))(MuiDialogActions);\n  \nconst SettingDrawer = (props) => {\n    const [open, setOpen] = React.useState(false);\n    // 0 1 2 middle 3 4 5 big 6 small\n    const petpic = [yellowbird_1, icebird_1];\n    const petName = ['詠為黃色雞雞', '書睿超屌冰鳥', '宏軒胖胖鳥鳥'];\n    const petHeight = [];\n    const petWeight = [];\n    const petpersonality = [];\n    const petstage = [];\n    const petstageproperty = ['', '', '', '很笨很臭', '冰雪世界的貴族鳥類，擁有不凡的魔法力量，可以發射冰球。', '', '', '', ''];\n    \n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    return (\n      <div>\n        <Button color=\"secondary\" onClick={handleClickOpen} className=\"moni_setting\" size='medium' startIcon={< LiveHelpOutlinedIcon/>}>\n          Imformation\n        </Button>\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            imformation of {props.user}'s GG\n          </DialogTitle>\n          <DialogContent dividers>\n            <Typography gutterBottom>\n                <img src={petpic[props.type]} width=\"30%\" height=\"30%\"/><br/>\n                GG名: {petName[props.type]}<br/>\n                身高: {petHeight} cm<br/>個性: {petpersonality}<br/>       \n                體重: {petWeight} kg<br/>\n                已存活時間: {props.lifeTime}s\n            </Typography>\n            <Typography gutterBottom>\n                狀態: {petName[props.type]}{petstage[props.stage]}! <br/>\n                介紹: {(props.stage == 0)? petstageproperty[9]:petstageproperty[props.type + 3*props.stage]}\n            </Typography>\n            <Typography gutterBottom>\n              \"媽的智障鳥鳥\"\n            </Typography>\n          </DialogContent>\n          <DialogActions>\n          <Link to=\"/login\">\n            <Button autoFocus onClick={props.logout} color=\"primary\">\n              Log out\n            </Button>\n          </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  export default SettingDrawer;",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":4,"column":3,"nodeType":"204","messageId":"205","endLine":4,"endColumn":11},{"ruleId":"202","severity":1,"message":"206","line":5,"column":3,"nodeType":"204","messageId":"205","endLine":5,"endColumn":8},{"ruleId":"202","severity":1,"message":"207","line":65,"column":16,"nodeType":"204","messageId":"205","endLine":65,"endColumn":23},{"ruleId":"208","severity":1,"message":"209","line":78,"column":20,"nodeType":"210","messageId":"211","endLine":78,"endColumn":22},{"ruleId":"212","severity":1,"message":"213","line":97,"column":6,"nodeType":"214","endLine":97,"endColumn":17,"suggestions":"215"},{"ruleId":"212","severity":1,"message":"216","line":100,"column":13,"nodeType":"217","endLine":124,"endColumn":4},{"ruleId":"212","severity":1,"message":"218","line":124,"column":5,"nodeType":"214","endLine":124,"endColumn":11,"suggestions":"219"},{"ruleId":"208","severity":1,"message":"220","line":142,"column":14,"nodeType":"210","messageId":"211","endLine":142,"endColumn":16},{"ruleId":"202","severity":1,"message":"221","line":4,"column":17,"nodeType":"204","messageId":"205","endLine":4,"endColumn":26},{"ruleId":"202","severity":1,"message":"222","line":4,"column":28,"nodeType":"204","messageId":"205","endLine":4,"endColumn":34},{"ruleId":"202","severity":1,"message":"223","line":11,"column":24,"nodeType":"204","messageId":"205","endLine":11,"endColumn":38},{"ruleId":"224","severity":1,"message":"225","line":17,"column":15,"nodeType":"226","endLine":17,"endColumn":112},{"ruleId":"224","severity":1,"message":"225","line":19,"column":15,"nodeType":"226","endLine":19,"endColumn":120},{"ruleId":"224","severity":1,"message":"225","line":25,"column":15,"nodeType":"226","endLine":25,"endColumn":59},{"ruleId":"198","replacedBy":"227"},{"ruleId":"200","replacedBy":"228"},{"ruleId":"202","severity":1,"message":"229","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":30},{"ruleId":"202","severity":1,"message":"230","line":1,"column":43,"nodeType":"204","messageId":"205","endLine":1,"endColumn":49},{"ruleId":"202","severity":1,"message":"231","line":1,"column":76,"nodeType":"204","messageId":"205","endLine":1,"endColumn":82},{"ruleId":"202","severity":1,"message":"232","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"208","severity":1,"message":"220","line":66,"column":20,"nodeType":"210","messageId":"211","endLine":66,"endColumn":22},{"ruleId":"208","severity":1,"message":"220","line":74,"column":25,"nodeType":"210","messageId":"211","endLine":74,"endColumn":27},{"ruleId":"208","severity":1,"message":"220","line":82,"column":26,"nodeType":"210","messageId":"211","endLine":82,"endColumn":28},{"ruleId":"208","severity":1,"message":"220","line":141,"column":20,"nodeType":"210","messageId":"211","endLine":141,"endColumn":22},{"ruleId":"208","severity":1,"message":"220","line":148,"column":25,"nodeType":"210","messageId":"211","endLine":148,"endColumn":27},{"ruleId":"208","severity":1,"message":"220","line":155,"column":26,"nodeType":"210","messageId":"211","endLine":155,"endColumn":28},{"ruleId":"208","severity":1,"message":"220","line":221,"column":20,"nodeType":"210","messageId":"211","endLine":221,"endColumn":22},{"ruleId":"208","severity":1,"message":"220","line":228,"column":25,"nodeType":"210","messageId":"211","endLine":228,"endColumn":27},{"ruleId":"208","severity":1,"message":"220","line":235,"column":26,"nodeType":"210","messageId":"211","endLine":235,"endColumn":28},{"ruleId":"212","severity":1,"message":"216","line":244,"column":13,"nodeType":"217","endLine":248,"endColumn":4},{"ruleId":"212","severity":1,"message":"233","line":248,"column":5,"nodeType":"214","endLine":248,"endColumn":7,"suggestions":"234"},{"ruleId":"208","severity":1,"message":"220","line":302,"column":20,"nodeType":"210","messageId":"211","endLine":302,"endColumn":22},{"ruleId":"212","severity":1,"message":"235","line":316,"column":6,"nodeType":"214","endLine":316,"endColumn":21,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":332,"column":5,"nodeType":"239","messageId":"240","endLine":392,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":377,"column":17,"nodeType":"243","endLine":377,"endColumn":38},{"ruleId":"241","severity":1,"message":"242","line":380,"column":17,"nodeType":"243","endLine":380,"endColumn":44},{"ruleId":"202","severity":1,"message":"244","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"222","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":34},{"ruleId":"202","severity":1,"message":"245","line":1,"column":36,"nodeType":"204","messageId":"205","endLine":1,"endColumn":44},{"ruleId":"202","severity":1,"message":"246","line":17,"column":21,"nodeType":"204","messageId":"205","endLine":17,"endColumn":33},{"ruleId":"202","severity":1,"message":"247","line":18,"column":9,"nodeType":"204","messageId":"205","endLine":18,"endColumn":20},{"ruleId":"202","severity":1,"message":"248","line":65,"column":10,"nodeType":"204","messageId":"205","endLine":65,"endColumn":17},{"ruleId":"202","severity":1,"message":"249","line":19,"column":8,"nodeType":"204","messageId":"205","endLine":19,"endColumn":18},{"ruleId":"250","severity":1,"message":"251","line":94,"column":47,"nodeType":"252","messageId":"253","endLine":94,"endColumn":48,"suggestions":"254"},{"ruleId":"250","severity":1,"message":"251","line":94,"column":57,"nodeType":"252","messageId":"253","endLine":94,"endColumn":58,"suggestions":"255"},{"ruleId":"250","severity":1,"message":"251","line":98,"column":51,"nodeType":"252","messageId":"253","endLine":98,"endColumn":52,"suggestions":"256"},{"ruleId":"250","severity":1,"message":"251","line":98,"column":63,"nodeType":"252","messageId":"253","endLine":98,"endColumn":64,"suggestions":"257"},{"ruleId":"202","severity":1,"message":"258","line":109,"column":11,"nodeType":"204","messageId":"205","endLine":109,"endColumn":18},{"ruleId":"202","severity":1,"message":"259","line":109,"column":20,"nodeType":"204","messageId":"205","endLine":109,"endColumn":32},{"ruleId":"202","severity":1,"message":"244","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"260","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":27},{"ruleId":"202","severity":1,"message":"221","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"222","line":2,"column":28,"nodeType":"204","messageId":"205","endLine":2,"endColumn":34},{"ruleId":"202","severity":1,"message":"245","line":2,"column":36,"nodeType":"204","messageId":"205","endLine":2,"endColumn":44},{"ruleId":"224","severity":1,"message":"225","line":60,"column":13,"nodeType":"226","endLine":60,"endColumn":52},{"ruleId":"224","severity":1,"message":"225","line":69,"column":17,"nodeType":"226","endLine":69,"endColumn":78},{"ruleId":"224","severity":1,"message":"225","line":74,"column":17,"nodeType":"226","endLine":74,"endColumn":84},{"ruleId":"224","severity":1,"message":"225","line":79,"column":17,"nodeType":"226","endLine":79,"endColumn":99},{"ruleId":"224","severity":1,"message":"225","line":82,"column":17,"nodeType":"226","endLine":82,"endColumn":117},{"ruleId":"224","severity":1,"message":"225","line":26,"column":15,"nodeType":"226","endLine":26,"endColumn":66},{"ruleId":"202","severity":1,"message":"261","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":15},{"ruleId":"202","severity":1,"message":"229","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":30},{"ruleId":"202","severity":1,"message":"262","line":1,"column":32,"nodeType":"204","messageId":"205","endLine":1,"endColumn":41},{"ruleId":"202","severity":1,"message":"263","line":1,"column":51,"nodeType":"204","messageId":"205","endLine":1,"endColumn":65},{"ruleId":"202","severity":1,"message":"231","line":1,"column":76,"nodeType":"204","messageId":"205","endLine":1,"endColumn":82},{"ruleId":"202","severity":1,"message":"232","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"222","line":2,"column":38,"nodeType":"204","messageId":"205","endLine":2,"endColumn":44},{"ruleId":"202","severity":1,"message":"221","line":2,"column":46,"nodeType":"204","messageId":"205","endLine":2,"endColumn":55},{"ruleId":"202","severity":1,"message":"264","line":3,"column":13,"nodeType":"204","messageId":"205","endLine":3,"endColumn":17},{"ruleId":"202","severity":1,"message":"265","line":7,"column":23,"nodeType":"204","messageId":"205","endLine":7,"endColumn":35},{"ruleId":"202","severity":1,"message":"222","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":34},{"ruleId":"202","severity":1,"message":"245","line":1,"column":36,"nodeType":"204","messageId":"205","endLine":1,"endColumn":44},{"ruleId":"202","severity":1,"message":"266","line":4,"column":22,"nodeType":"204","messageId":"205","endLine":4,"endColumn":32},{"ruleId":"208","severity":1,"message":"220","line":57,"column":28,"nodeType":"210","messageId":"211","endLine":57,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":72,"column":17,"nodeType":"226","endLine":72,"endColumn":66},{"ruleId":"208","severity":1,"message":"220","line":72,"column":19,"nodeType":"210","messageId":"211","endLine":72,"endColumn":21},{"ruleId":"208","severity":1,"message":"220","line":75,"column":24,"nodeType":"210","messageId":"211","endLine":75,"endColumn":26},{"ruleId":"208","severity":1,"message":"220","line":78,"column":24,"nodeType":"210","messageId":"211","endLine":78,"endColumn":26},{"ruleId":"202","severity":1,"message":"244","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"221","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"222","line":2,"column":28,"nodeType":"204","messageId":"205","endLine":2,"endColumn":34},{"ruleId":"224","severity":1,"message":"225","line":86,"column":17,"nodeType":"226","endLine":86,"endColumn":73},{"ruleId":"208","severity":1,"message":"220","line":94,"column":35,"nodeType":"210","messageId":"211","endLine":94,"endColumn":37},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'setOver' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lifeTime' and 'stage'. Either include them or remove the dependency array.","ArrayExpression",["269"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'sendGameStart'. Either include it or remove the dependency array.",["270"],"Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'setChickenName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["267"],["268"],"'PixiComponent' is defined but never used.","'Sprite' is defined but never used.","'useApp' is defined but never used.","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'props.health', 'props.hunger', and 'props.user'. Either include them or remove the dependency array.",["271"],"React Hook useEffect has missing dependencies: 'foodarr', 'foodposarr', 'genNewFood', 'props.height', and 'props.width'. Either include them or remove the dependency array. You can also do a functional update 'setFoodArr(f => ...)' if you only need 'foodarr' in the 'setFoodArr' call.",["272"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'React' is defined but never used.","'useState' is defined but never used.","'useAuthState' is defined but never used.","'createChick' is defined but never used.","'isLogin' is assigned a value but never used.","'AlertTitle' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["273","274"],["275","276"],["277","278"],["279","280"],"'loading' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useReducer' is defined but never used.","'Stage' is defined but never used.","'Container' is defined but never used.","'AnimatedSprite' is defined but never used.","'PIXI' is defined but never used.","'setPositionX' is assigned a value but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"messageId":"289","fix":"290","desc":"291"},{"messageId":"292","fix":"293","desc":"294"},{"messageId":"289","fix":"295","desc":"291"},{"messageId":"292","fix":"296","desc":"294"},{"messageId":"289","fix":"297","desc":"291"},{"messageId":"292","fix":"298","desc":"294"},{"messageId":"289","fix":"299","desc":"291"},{"messageId":"292","fix":"300","desc":"294"},"Update the dependencies array to be: [lifeTime, stage, wsmessage]",{"range":"301","text":"302"},"Update the dependencies array to be: [sendGameStart, user]",{"range":"303","text":"304"},"Update the dependencies array to be: [props.health, props.hunger, props.user]",{"range":"305","text":"306"},"Update the dependencies array to be: [foodarr, foodposarr, genNewFood, props.foodpos, props.height, props.width]",{"range":"307","text":"308"},"removeEscape",{"range":"309","text":"310"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"311","text":"312"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"313","text":"310"},{"range":"314","text":"312"},{"range":"315","text":"310"},{"range":"316","text":"312"},{"range":"317","text":"310"},{"range":"318","text":"312"},[3082,3093],"[lifeTime, stage, wsmessage]",[3878,3884],"[sendGameStart, user]",[10151,10153],"[props.health, props.hunger, props.user]",[11969,11984],"[foodarr, foodposarr, genNewFood, props.foodpos, props.height, props.width]",[2795,2796],"",[2795,2795],"\\",[2805,2806],[2805,2805],[2979,2980],[2979,2979],[2991,2992],[2991,2991]]